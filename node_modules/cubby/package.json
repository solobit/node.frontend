{
  "name": "cubby",
  "version": "0.0.2",
  "description": "simple storage",
  "main": "index.js",
  "directories": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/icodeforlove/node-cubby.git"
  },
  "keywords": [
    "storage",
    "node",
    "json"
  ],
  "author": {
    "name": "Chad Scira"
  },
  "license": "MIT",
  "devDependencies": {},
  "dependencies": {
    "clone": "0.1.1",
    "underscore": "1.4.2"
  },
  "readme": "## cubby\n\nsuper simple synchronous json storage\n\nthis was originally created to provide a way to store data for a few command-line tools, and is not geared towards performance\n\n## installation\n\n    $ npm install cubby\n\n## usage\n\n```javascript\nvar Cubby = require('cubby'),\n\tcubby = new Cubby();\n\ncubby.set('foo', 'bar');\n\nconsole.log(cubby.get('foo'));\n```\n\nor\n\n```javascript\ncubby.set({\n\tone: 'one',\n\ttwo: 'two',\n\tthree: {\n\t\tnested: true\n\t}\n});\n\nconsole.log(cubby.get('one')); // returns one\nconsole.log(cubby.getPath('three.nested')); // returns true\n```\n\n## multiple files\n\nby default creating a cubby will result in a cubby.json file, but you can change this by providing a file path\n\n```javascript\nvar cubbyOne = new Cubby({file: 'something-one.json'}),\n\tcubbyTwo = new Cubby({file: 'something-two.json'});\n```\n\n## paths\n\n```javascript\ncubby.setPath('one.two.three', true);\ncubby.getPath('one.two.three');\ncubby.getPath('one.two.three.four'); // returns undefined when value doesn't exist\n```",
  "readmeFilename": "Readme.md",
  "_id": "cubby@0.0.2",
  "_from": "cubby@"
}
